import { IcrudController } from '../Sys/interfaces';
import {{Module}}Repository from '../Repository/{{module}}';
import {{Module}} from '../Poco/{{module}}';
// only for debugging
// import { dd } from '../Sys/Debug';

/* {{Module}} Controller Class */
export default class {{Module}}Controller implements IcrudController{

	get repository(){
		return new {{Module}}Repository;
	}

	async createAction(params): Promise<any> {
		let Entity	= new {{Module}}(params);
		let data	= await this.repository.Create(Entity);

		return new {{Module}}( data );
	}

	async listAction(params): Promise<any> {
		let {limit,offset} = params;
		const data = await this.repository.GetAll(params);

		data.rows = data.rows.map( row => new {{Module}}(row) );
		const {count, rows} = data;

		return {count,rows,limit,offset};
	}

	async showAction(params): Promise<any> {
		let data = await this.repository.GetById(params);
		data	= (data) ? new {{Module}}(data) : null;

		return data;
	}

	async editAction(params): Promise<any> {
		let data = await this.repository.Update(params);

		return new {{Module}}(data);
	}

	async deleteAction(params): Promise<any> {
		return await this.repository.Delete(params);
	}
}
