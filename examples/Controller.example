import { iController }	from "../Sys/interfaces";
import {{Module}}Repository	from "../Repository/{{module}}";
import {{Module}}		from "../Poco/{{module}}";
// only for debugging
// import Debug from '../Sys/Debug';

/* {{Module}} Controller Class */
export default class {{Module}}Controller implements iController{

	get repository(){
		return new {{Module}}Repository;
	}

	async createAction(params:any):Promise<any>{
		let Entity	= new {{Module}}(params);
		let data	= await this.repository.Create(Entity);

		return new {{Module}}( data );
	}

	async listAction(params):Promise<any>{
		let {count,rows} = await this.repository.GetAll(params);
		let {limit,offset} = params;

		rows = rows.map( element => new {{Module}}(element) );

		return {count,rows,limit,offset};
	}

	async showAction(params:any):Promise<any>{
		let data = await this.repository.GetById(params);

		return new {{Module}}(data);
	}

	async editAction(params:any):Promise<any>{
		let data = await this.repository.Update(params);

		return new {{Module}}(data);
	}

	async deleteAction(params:any):Promise<any>{
		return await this.repository.Delete(params);
	}
}
